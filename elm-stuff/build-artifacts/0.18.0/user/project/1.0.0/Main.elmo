var _user$project$Main$filterTodos = F2(
	function (filter, todos) {
		var _p0 = filter;
		if (_p0.ctor === 'All') {
			return todos;
		} else {
			return A2(
				_elm_lang$core$List$filter,
				function (todo) {
					return _elm_lang$core$Native_Utils.eq(todo.status, _p0._0);
				},
				todos);
		}
	});
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {todos: a, input: b, lastId: c, filter: d};
	});
var _user$project$Main$Todo = F3(
	function (a, b, c) {
		return {id: a, label: b, status: c};
	});
var _user$project$Main$Incomplete = {ctor: 'Incomplete'};
var _user$project$Main$Complete = {ctor: 'Complete'};
var _user$project$Main$toggleTodo = function (todo) {
	var _p1 = todo.status;
	if (_p1.ctor === 'Complete') {
		return _elm_lang$core$Native_Utils.update(
			todo,
			{status: _user$project$Main$Incomplete});
	} else {
		return _elm_lang$core$Native_Utils.update(
			todo,
			{status: _user$project$Main$Complete});
	}
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SetInput':
				return _elm_lang$core$Native_Utils.update(
					model,
					{input: _p2._0});
			case 'AddTodo':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						todos: A2(
							_elm_lang$core$Basics_ops['++'],
							model.todos,
							{
								ctor: '::',
								_0: _p2._0,
								_1: {ctor: '[]'}
							}),
						lastId: model.lastId + 1,
						input: ''
					});
			case 'RemoveTodo':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						todos: A2(
							_elm_lang$core$List$filter,
							function (todo) {
								return !_elm_lang$core$Native_Utils.eq(todo.id, _p2._0);
							},
							model.todos)
					});
			case 'ToggleTodo':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						todos: A2(
							_elm_lang$core$List$map,
							function (todo) {
								return _elm_lang$core$Native_Utils.eq(todo.id, _p2._0) ? _user$project$Main$toggleTodo(todo) : todo;
							},
							model.todos)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{filter: _p2._0});
		}
	});
var _user$project$Main$By = function (a) {
	return {ctor: 'By', _0: a};
};
var _user$project$Main$All = {ctor: 'All'};
var _user$project$Main$initialModel = {
	todos: {ctor: '[]'},
	input: 'hello',
	lastId: 1,
	filter: _user$project$Main$All
};
var _user$project$Main$FilterTodos = function (a) {
	return {ctor: 'FilterTodos', _0: a};
};
var _user$project$Main$ToggleTodo = function (a) {
	return {ctor: 'ToggleTodo', _0: a};
};
var _user$project$Main$RemoveTodo = function (a) {
	return {ctor: 'RemoveTodo', _0: a};
};
var _user$project$Main$renderTodo = function (todo) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						_elm_lang$core$Native_Utils.eq(todo.status, _user$project$Main$Complete) ? 'completedTodo' : 'incompletTodo'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$Main$ToggleTodo(todo.id)),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(todo.label),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$RemoveTodo(todo.id)),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('X'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$AddTodo = function (a) {
	return {ctor: 'AddTodo', _0: a};
};
var _user$project$Main$SetInput = function (a) {
	return {ctor: 'SetInput', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('asd\'s Todo app'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Start adding a todo!'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Main$FilterTodos(
									_user$project$Main$By(_user$project$Main$Complete))),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Complete'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$FilterTodos(
										_user$project$Main$By(_user$project$Main$Incomplete))),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Incomplete'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Main$FilterTodos(_user$project$Main$All)),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('All'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$SetInput),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(model.input),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Main$AddTodo(
													A3(_user$project$Main$Todo, model.lastId + 1, model.input, _user$project$Main$Incomplete))),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Add'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$ul,
											{ctor: '[]'},
											A2(
												_elm_lang$core$List$map,
												_user$project$Main$renderTodo,
												A2(_user$project$Main$filterTodos, model.filter, model.todos))),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$initialModel, view: _user$project$Main$view, update: _user$project$Main$update})();
